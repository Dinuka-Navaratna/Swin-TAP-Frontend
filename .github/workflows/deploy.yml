name: Deploy to Surge

on:
  push:
    branches:
      - staging

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Add CNAME file
        run: echo "autoassure.me" > build/CNAME

      - name: Add _redirects file
        run: echo "/* /index.html 200" > build/_redirects

      - name: Add 200.html file
        run: cp build/index.html build/200.html

      - name: Add 404.html file
        run: cp build/index.html build/404.html

      - name: Ensure service worker is in build directory
        run: cp src/serviceWorker.js build/serviceWorker.js

      - name: Create GitHub Deployment
        id: create_deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments
          ref: ${{ github.sha }}
          environment: Staging
          description: "Deploying to Surge"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to Surge
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        run: |
          npm install -g surge
          surge ./build autoassure.me --token $SURGE_TOKEN

      - name: Update Deployment Status to Success
        if: success()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.id }}/statuses
          state: success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update Deployment Status to Failure
        if: failure()
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/${{ github.repository }}/deployments/${{ steps.create_deployment.outputs.id }}/statuses
          state: failure
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
